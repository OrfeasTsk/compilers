Project2 Compilers


Η εργασία για τον σημασιολογικό έλεγχο προγραμμάτων της minijava υλοποιήθηκε με βάση το visitor pattern όπως παρουσιάστηκε στο φροντιστήριο. Αρχικά, η Main.java περιλαμβάνει το entry point του προγράμματος όπου κάνει parse κάθε πρόγραμμα minijava που δίνεται στα ορίσματα και στην συνέχεια κάνει traverse στο AST, που έχει δημιουργήσει ο parser για το καθένα, χρησιμοποιώντας ένα σύνολο από visitors που έχουν οριστεί στην συνέχεια του αρχείου προκειμένου να γίνει ο σημασιολογικός έλεγχος. Πριν αναλυθούν οι visitors θα αναφερθούν οι πρόσθετες κλάσεις, οι οποίες βρίσκονται στον υποκατάλογο/πακέτο extras, και δημιουργήθηκαν με κύριο σκοπό την συλλογή και αξιοποίηση των πληροφοριών του AST. 
Για την μοντελοποίηση των βασικότερων στοιχείων του κώδικα ενός minijava προγράμματος (μεταβλητές, κλάσεις, συναρτήσεις, εκφράσεις) δημιουργήθηκαν κάποιες κλάσεις που κληρονομούν την κλάση Info η οποία περιλαμβάνει ένα String ονόματος. Έτσι, για τα στοιχεία κλάσεων υπάρχει η κλάση ClassInfo που περιλαμβάνει ένα index για την επιλογή του scope της από το scope στο οποίο βρίσκεται μια κλάση, μια λίστα με τα ονόματα των κλάσεων που κληρονομεί, τα τρέχοντα offsets των μεταβλητών και των συναρτήσεων της και κάποιες σημαντικές συναρτήσεις που έχουν να κάνουν κυρίως με τις υπερκλάσεις της, όπως επιλογή της γονικής κλάσης, έλεγχος για υπερκλάση και συνένωση των ονομάτων κλάσεων που κληρονομεί από εκείνες. Για τα στοιχεία μεταβλητών υπάρχει η κλάση VarInfo που περιλαμβάνει τον τύπο της μεταβλητής και κάποιες χρήσιμες συναρτήσεις όπως αυτή της εκτύπωσης και αυτή που ελέγχει αν η μεταβλητή έχει πρωτόγονο τύπο. Με παρόμοια λογική με τις προηγούμενες κλάσεις υπάρχει και η κλάση FunInfo για τα στοιχεία συναρτήσεων που περιλαμβάνει και αυτή ένα index για την επιλογή του scope της από το scope στο οποίο βρίσκεται μια συνάρτηση, τον τύπο επιστροφή της, ένα flag για το αν είναι overridden, ένα map από τα ονόματα των παραμέτρων της σε VarInfo και κάποιες χρήσιμες συναρτήσεις όπως αυτή της εκτύπωσης, αυτής που ελέγχει αν έχει πρωτόγονο τύπο, αυτής της ισότητας με άλλη συνάρτηση (equals) και κάποιες συναρτήσεις που αφορούν τις παραμέτρους όπως προσθήκη, ανάκτηση παραμέτρου και ανάκτηση αριθμού παραμέτρων. Τέλος, για τα στοιχεία εκφράσεων υπάρχει η κλάση ExprInfo που περιλαμβάνει τον τύπο της έκφρασης και επίσης μια κλάση που σχετίζεται αρκετά με αυτή είναι η ArgCollector που περιλαμβάνει μια λίστα από εκφράσεις και χρησιμεύει στην συλλογή εκείνων που βρίσκονται στα ορίσματα των συναρτήσεων (παρόμοια λογική με τις παραμέτρους της FunInfo). 
Σε επόμενη φάση βασική προϋπόθεση για τον σημασιολογικό έλεγχο είναι ο ορισμός της έννοιας του scope. Έτσι, δημιουργήθηκε η αντίστοιχη κλαση Scope η οποία περιλαμβάνει τις βασικές πληροφορίες ενός scope οι οποίες είναι το όνομα (κλάση Info) και ο τύπος του scope (κλάση, συνάρτηση, καθολικό scope), το προηγούμενο/παραπάνω scope που το φιλοξενεί, το τρέχον ύπο-scope που επισκέπτεται το SymbolTable, που θα αναλυθεί παρακάτω, μια λίστα με τα ύπο-scopes που φιλοξενεί και κάποια maps που αντιστοιχούν σε πληροφορίες των μεταβλητών, συναρτήσεων και κλάσεων που περιέχει.  Επιπλέον, περιλαμβάνει μια σειρά συναρτήσεων για την εισαγωγή και την αναζήτηση των τελευταίων αλλά και συναρτήσεις που αφορούν τα επιμέρους ύπο-scopes που φιλοξενεί όπως η προσθήκη και η ανάκτηση κάποιου, η ανάκτηση του αριθμού τους και η αλλαγή του επόμενου ύπο-scope που θα γίνει η επόμενη επίσκεψη.
Η πιο βασική κλάση είναι αυτή που υλοποιεί το SymbolTable (chained implementation) και υλοποιεί τις βασικότερες λειτουργίες του με βάση το τρέχον scope που βρίσκεται κάθε φορά. Αρχικά, ορίζεται η συνάρτηση enter() η οποία εισέρχεται σε κάποιο scope (νέο ή ήδη δημιουργημένο), η συνάρτηση exit() για την έξοδο από το τρέχον scope και επιστροφή στο προηγούμενο/παραπάνω, οι συναρτήσεις insert() που ορίζονται διαφορετικά για την εισαγωγή των κλάσεων, των μεταβλητών και των συναρτήσεων, κάνοντας και τους απαραίτητους σημασιολογικούς ελέγχους, και επιπλέον οι συναρτήσεις για την αναζήτηση των παραπάνω, που ξεκινάνε να ψάχνουν από το τρέχον scope “ανεβαίνοντας” στα εξώτερα scopes. Tέλος, υπάρχουν αρκετές συναρτήσεις που εκτελούν κάποια συγκεκριμένη λειτουργία όπως ο έλεγχος για υποτυπισμό, για override και μη πρωτόγονων τύπων, η αναζήτηση πεδίων και συναρτήσεων σε συγκεκριμένες κλάσεων και η εκτύπωση των offsets.
Σε τελευταίο στάδιο, θα περιγραφούν αρκετά συνοπτικά οι τρεις visitors που ελέγχουν σημασιολογικά το πρόγραμμα εισόδου. Ο πρώτος είναι ο ClassCollector όπου ασχολείται μόνο με τις κλάσεις δημιουργώντας τα scopes τους, μαζεύοντας παράλληλα και τις πληροφορίες για την κληρονομικότητα τους με βάση την σειρά που έχουν οριστεί (οπότε αν δεν βρεθεί η κλάση που κληρονομείται δημιουργείται error). Στην συνέχεια, ο δεύτερος είναι ο SymbolCollector που με παρόμοιο τρόπο συλλέγει όλες τις πληροφορίες για τις μεταβλητές και τις συναρτήσεις. Όσον αφορά τις συναρτήσεις δημιουργεί τα scopes τους και ελέγχει για το αν υπάρχει override μεταξύ κάποιων πανομοιότυπων που βρίσκονται σε διαφορετικές κλάσεις. Ο τελευταίος visitor είναι ο TypeChecker όπου ελέγχει ουσιαστικά την ορθότητα, την συμβατότητα και την τήρηση των τύπων στις εκφράσεις και τις εντολές στους αντίστοιχους κόμβους του AST.




Γενικές παρατηρήσεις:


- Ο ClassCollector δημιουργήθηκε ξεχωριστά για να έχουν συλλεχθεί πριν από τους πιο σύνθετους ελέγχους όλοι οι δυνατοί τύποι που έχουν οριστεί.
- Επειδή ήταν απαραίτητη η διατήρηση της σειράς εισαγωγής σε μερικές περιπτώσεις στα maps χρησιμοποιήθηκαν τα LinkedHashMaps.
- Δημιουργήθηκε το ειδικό exception SemanticError όπου σε οποιαδήποτε σημασιολογικό λάθος παράγεται με κάποιο επεξηγηματικό μήνυμα.
- Οι μέθοδοι visit επιστρέφουν κάποιο instance της κλάσης Info εφόσον μας ενδιαφέρει πληροφορία από τα πιο κάτω επίπεδα και δέχονται οποιοδήποτε Object το οποίο δίνει κάποια πληροφορία ή συλλέγει πληροφορία από τα πιο κάτω επίπεδα.
- Στις επιπλέον κλάσεις όλα τα πεδία είναι private και υπάρχουν αντίστοιχες συναρτήσεις για αλλαγή και ανάκτηση (setters - getters)
- Περισσότερες λεπτομέρειες υπάρχουν και στα σχόλια στα περισσότερα σημεία του κώδικα.
- Τα εργαλεία jtb και javacc πρέπει να έχουν μπεί στον αμέσως προηγούμενο κατάλογο από το Makefile.


Ορφέας Τσουράκης 1115201700175